{"version":3,"sources":["../fable_main.fsx"],"names":[],"mappings":";;;;;;;;;;;;;AAqCI,OACI;AAAA,gCAAM;AAAA;AAAA,KAAN,EACI,qBAAM;AAAA;AAAA,KAAN,EACI,qBAAM;AAAA;AAAA,KAAN,EACI,mCADJ,EAGI,kCAHJ,CADJ,CADJ;AAQC;AAGL,OAAmC;AAAA;AAAA;AAAA;AAAA;AAAA,qDAQ/B;AAA6B,uDAAqC,UAArC;AAA7B;AAA8E,KAR/C,0CAU/B;AAA6B,wDAAqC,mBAArC;;AAA7B;AAA+F,KAVhE;AAAA;AAAA,gDAc/B;AAAsB;AAAtB;AAA2C,KAdZ,sCAgB/B;AAAA;AAAA;AAAiC,KAhBF,sCAkB/B;AAAA;AAAA;AAA2B,KAlBI;AAAA;AAAA;AAkBJ;AAE/B,OACI;AACI,gDACqB,qBADrB,EAEkB,2BAAmD,6BAA6B,SAAC,4BAGZ,KAHY,6BAAD,EAU9B,4BAGmB,KAHnB,4BAV8B,EAA7B,CAAnD,CAFlB,EAsBW,SACC,UACiB,KADjB,EAEiB;AAAA;AAAA;AAAyB,KAAzB,EAFjB,gBADD,EAMC,UACiB,KADjB,EAEiB;AAAA;AAAA;AAAyB,KAAzB,EAFjB,iBAND,EAtBX;AAqCS;AACL,4BAAY;AAAA;AAAA;AAAA;AAAA,KAAZ;AACG,yCAAsB,cAAK;AAAA;AAAA,KAAL,EAAgB,EAAhB,CAAtB;AAAA;AAAA;AACf,qBAA0B,uCAA1B;AAzCqB;AA2CzB","file":"fable_main.js","sourcesContent":["#r \"node_modules/fable-core/Fable.Core.dll\"\n#r \"node_modules/fable-powerpack/Fable.PowerPack.dll\"\n#r \"node_modules/fable-react/Fable.React.dll\"\n#r \"node_modules/fable-redux/Fable.Redux.dll\"\n#r \"node_modules/fable-reactredux/Fable.ReactRedux.dll\"\n#r \"node_modules/fable-reduxthunk/Fable.ReduxThunk.dll\"\n#load \"node_modules/fable-import-fetch/Fable.Import.Fetch.fs\"\n#load \"node_modules/fable-import-fetch/Fable.Helpers.Fetch.fs\"\n#load \"fable_domainModel.fsx\"\nopen Fable_domainModel\n#load \"fable_Commands.fsx\"\nopen Commands\n#load \"fable_navigation.fsx\"\nopen Fable_navigation\n#load \"fable_map.fsx\"\nopen Fable_map\n#load \"fable_elevation.fsx\"\nopen Fable_elevation\n\n\n\nopen Fable.Core\nopen Fable.Import\nopen System\nopen Fable.Core.JsInterop\nopen Fable.Import.Fetch\nopen Fable.Helpers.Fetch\nopen Fable.Helpers.Redux\nopen Fable.Helpers.ReactRedux\n\nmodule R = Fable.Helpers.React\nopen R.Props\n// domain models\n\n\n//Node.require.Invoke(\"core-js\") |> ignore        \n\nlet createApp initialState =              \n        R.div [ ClassName \"site-wrapper\"] [ \n            R.div [ ClassName \"site-wrapper-inner\"] [ \n                R.div [ ClassName \"cover-container\"] [                     \n                    createNavigationViewComponent()\n                    //createMapViewComponent()\n                    createElevationViewComponent()\n                ]\n            ]            \n        ]\n\n\nlet reducer (state: LocationTracker) = function\n    | BeginTracking identifer ->\n        state\n    | StopTracking identifier -> \n        state\n    | LoadTrackingPoints (beginDate, endDate, selectedTrack) -> \n        state\n    | ClearTrackingPoints ->\n        { state with Visualization = new TrackVisualization(String.Empty, List.Empty)}\n    | ReceivedTrack trackingPoints ->\n        { state with Visualization = new TrackVisualization(String.Empty, List.ofArray trackingPoints)}\n    | LoadingTracks ->\n        state        \n    | ReceivedTracks tracks ->\n        { state with Tracks = List.ofArray tracks }\n    | ShowError error ->\n        { state with Error = Some error }\n    | HideError ->\n        { state with Error = None } \n                                               \nlet start() = \n    let initialStoreState = \n            {\n                TrackingService= new TrackingService(); \n                Visualization=new TrackVisualization(name=String.Empty, points = TrackVisualization.calculate [{\n                                                                                    latitude = 8.9\n                                                                                    longitude = 5.9\n                                                                                    timestamputc = DateTime.Now\n                                                                                    speed = 34.9\n                                                                                    distanceCovered = 0.0\n                                                                                    distance = 32300.9\n                                                                                    index = 0\n                                                                                    elevation = 320.3\n                                                                                };\n                                                                                {\n                                                                                    latitude = 9.9\n                                                                                    longitude = 5.9\n                                                                                    timestamputc = DateTime.Now\n                                                                                    speed = 34.9\n                                                                                    distanceCovered = 0.0\n                                                                                    distance = 32300.9\n                                                                                    index = 1\n                                                                                    elevation = 32.3\n                                                                                }]);\n                Tracks=[\n                        {                        \n                            mintimestamp=DateTime.Now;\n                            maxtimestamp=DateTime.Now.AddDays(1.0);\n                            name=\"first Track\"\n                        };\n                        {\n                            mintimestamp=DateTime.Now;\n                            maxtimestamp=DateTime.Now.AddDays(2.0);\n                            name=\"second Track\"\n                        }\n                       ];\n                Error = None\n            }\n    \n    let middleware = Redux.applyMiddleware ReduxThunk.middleware\n    let store = createStore reducer initialStoreState (Some middleware)\n    let provider = createProvider store (R.fn createApp (obj()) [])\n    ReactDom.render(provider, Browser.document.getElementsByClassName(\"main\").[0]) |> ignore\n\nstart()"]}